// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.1
// source: contentupload/image.proto

package contentupload

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Image_ScaleDirection int32

const (
	Image_WIDTH  Image_ScaleDirection = 0
	Image_HEIGHT Image_ScaleDirection = 1
)

// Enum value maps for Image_ScaleDirection.
var (
	Image_ScaleDirection_name = map[int32]string{
		0: "WIDTH",
		1: "HEIGHT",
	}
	Image_ScaleDirection_value = map[string]int32{
		"WIDTH":  0,
		"HEIGHT": 1,
	}
)

func (x Image_ScaleDirection) Enum() *Image_ScaleDirection {
	p := new(Image_ScaleDirection)
	*p = x
	return p
}

func (x Image_ScaleDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Image_ScaleDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_contentupload_image_proto_enumTypes[0].Descriptor()
}

func (Image_ScaleDirection) Type() protoreflect.EnumType {
	return &file_contentupload_image_proto_enumTypes[0]
}

func (x Image_ScaleDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Image_ScaleDirection.Descriptor instead.
func (Image_ScaleDirection) EnumDescriptor() ([]byte, []int) {
	return file_contentupload_image_proto_rawDescGZIP(), []int{0, 0}
}

// Image represent both image upload config and image display config
type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ThumbnailUrl   string               `protobuf:"bytes,2,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"` // smaller version of the image
	OffsetX        int32                `protobuf:"varint,3,opt,name=offset_x,json=offsetX,proto3" json:"offset_x,omitempty"`
	OffsetY        int32                `protobuf:"varint,4,opt,name=offset_y,json=offsetY,proto3" json:"offset_y,omitempty"`
	RatioX         int32                `protobuf:"varint,5,opt,name=ratio_x,json=ratioX,proto3" json:"ratio_x,omitempty"` // will only crop if image width is higher
	RatioY         int32                `protobuf:"varint,6,opt,name=ratio_y,json=ratioY,proto3" json:"ratio_y,omitempty"` // will only crop if image height is higher
	DataUrl        string               `protobuf:"bytes,7,opt,name=data_url,json=dataUrl,proto3" json:"data_url,omitempty"`
	Url            string               `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`                                                                                       // full version of the image (can be different ratio)
	ScalePx        int32                `protobuf:"varint,9,opt,name=scale_px,json=scalePx,proto3" json:"scale_px,omitempty"`                                                               // scale in px
	ScaleDirection Image_ScaleDirection `protobuf:"varint,10,opt,name=scale_direction,json=scaleDirection,proto3,enum=contentupload.Image_ScaleDirection" json:"scale_direction,omitempty"` // either: "width" / "height"
	Description    string               `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	Tags           []string             `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	Rotation       float64              `protobuf:"fixed64,13,opt,name=rotation,proto3" json:"rotation,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contentupload_image_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_contentupload_image_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_contentupload_image_proto_rawDescGZIP(), []int{0}
}

func (x *Image) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Image) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *Image) GetOffsetX() int32 {
	if x != nil {
		return x.OffsetX
	}
	return 0
}

func (x *Image) GetOffsetY() int32 {
	if x != nil {
		return x.OffsetY
	}
	return 0
}

func (x *Image) GetRatioX() int32 {
	if x != nil {
		return x.RatioX
	}
	return 0
}

func (x *Image) GetRatioY() int32 {
	if x != nil {
		return x.RatioY
	}
	return 0
}

func (x *Image) GetDataUrl() string {
	if x != nil {
		return x.DataUrl
	}
	return ""
}

func (x *Image) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Image) GetScalePx() int32 {
	if x != nil {
		return x.ScalePx
	}
	return 0
}

func (x *Image) GetScaleDirection() Image_ScaleDirection {
	if x != nil {
		return x.ScaleDirection
	}
	return Image_WIDTH
}

func (x *Image) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Image) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Image) GetRotation() float64 {
	if x != nil {
		return x.Rotation
	}
	return 0
}

var File_contentupload_image_proto protoreflect.FileDescriptor

var file_contentupload_image_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xb5, 0x03, 0x0a, 0x05, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x5f, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x58, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x59, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x5f, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x58, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x5f, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x59, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x70, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x50, 0x78, 0x12, 0x4c, 0x0a, 0x0f, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x0e, 0x53, 0x63, 0x61,
	0x6c, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x09, 0x0a, 0x05, 0x57,
	0x49, 0x44, 0x54, 0x48, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x45, 0x49, 0x47, 0x48, 0x54,
	0x10, 0x01, 0x42, 0x4c, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x64, 0x65, 0x73, 0x61, 0x69, 0x6e, 0x2d, 0x67, 0x72, 0x61, 0x74, 0x69, 0x73, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x3b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contentupload_image_proto_rawDescOnce sync.Once
	file_contentupload_image_proto_rawDescData = file_contentupload_image_proto_rawDesc
)

func file_contentupload_image_proto_rawDescGZIP() []byte {
	file_contentupload_image_proto_rawDescOnce.Do(func() {
		file_contentupload_image_proto_rawDescData = protoimpl.X.CompressGZIP(file_contentupload_image_proto_rawDescData)
	})
	return file_contentupload_image_proto_rawDescData
}

var file_contentupload_image_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_contentupload_image_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_contentupload_image_proto_goTypes = []interface{}{
	(Image_ScaleDirection)(0), // 0: contentupload.Image.ScaleDirection
	(*Image)(nil),             // 1: contentupload.Image
}
var file_contentupload_image_proto_depIdxs = []int32{
	0, // 0: contentupload.Image.scale_direction:type_name -> contentupload.Image.ScaleDirection
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_contentupload_image_proto_init() }
func file_contentupload_image_proto_init() {
	if File_contentupload_image_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_contentupload_image_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contentupload_image_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contentupload_image_proto_goTypes,
		DependencyIndexes: file_contentupload_image_proto_depIdxs,
		EnumInfos:         file_contentupload_image_proto_enumTypes,
		MessageInfos:      file_contentupload_image_proto_msgTypes,
	}.Build()
	File_contentupload_image_proto = out.File
	file_contentupload_image_proto_rawDesc = nil
	file_contentupload_image_proto_goTypes = nil
	file_contentupload_image_proto_depIdxs = nil
}
